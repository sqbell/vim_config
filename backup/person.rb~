class Person < ActiveRecord::Base
  belongs_to :hair
  belongs_to :gender
  belongs_to :ethnicity
  belongs_to :eye_color
  belongs_to :dress_size
  belongs_to :shirt_size
  belongs_to :jacket_size
  belongs_to :pant_size
  belongs_to :hat_size
  belongs_to :glove_size
  belongs_to :shoe_size
  
  belongs_to :state
  belongs_to :user
  belongs_to :country
  
  has_many :photos, :dependent => :destroy
  has_many :videos, :dependent => :destroy
  
  has_many :trainings, :dependent => :destroy
  has_many :experiences, :dependent => :destroy
  has_many :map_group_clients, :as => :client
  has_many :map_group_talents, :as => :talent

  has_many :custom_lists # and belongs to? or belongs_to :group ?
  has_and_belongs_to_many :affiliations
  has_and_belongs_to_many :features
  has_and_belongs_to_many :languages
  has_and_belongs_to_many :sports
  accepts_nested_attributes_for :user, :allow_destroy => true
  accepts_nested_attributes_for :videos, :reject_if => lambda { |a| a[:vicode].blank? }, :allow_destroy => true
  accepts_nested_attributes_for :photos, :reject_if => lambda { |a| a[:image].nil? }, :allow_destroy => true
  accepts_nested_attributes_for :experiences, :reject_if => lambda { |a| a[:title].blank? }, :allow_destroy => true
  accepts_nested_attributes_for :trainings, :reject_if => lambda { |a| a[:name].blank? }, :allow_destroy => true
  
  has_attached_file :avatar, :styles => {
      :thumb => "206x", # the hash means to crop
      :large => "x600"}
  
  attr_accessible :first_name, :middle_initial, :last_name, :user_attributes, :suffix, :ssn, :guardian_name, \
  :home_phone, :cell_phone, :work_phone, :street_address_1, :street_address_2, :city, :state_id, :zip, :gender_id, :dob, :ethnicity_id, \
  :height, :weight, :hair_id, :eye_color_id, :user_id, :country_id, :language_ids, :feature_ids, :sport_ids, :affiliation_ids, \
  :dress_size_id,:shirt_size_id,:jacket_size_id,:glove_size_id,:hat_size_id,:pant_size_id,:shoe_size_id, \
  :photos_attributes, :videos_attributes, :operational, :notes, :medical_allergies, :agency, :agent_name, \
  :experience_ids, :trainings_attributes, :experiences_attributes, :avatar
  
  attr_accessor :should_destroy
  
  # scope :ethnicity, proc { |ethnicity| where(:ethnicity_id => ethnicity) }
  # scope :country, proc { |country| where(:country_id => country) }
  # scope :gender, proc { |gender| where(:gender_id => gender) }
  # scope :eye_color, proc { |eye_color| where(:eye_color_id => eye_color) }
  # scope :hair_type, proc { |hair| where(:hair_id => hair) }
  
  search_methods :person_by_full_name
  scope :person_by_full_name, lambda {|name| where('(LOWER(first_name) || \' \' || LOWER(last_name)) LIKE ?', "%#{name.downcase}%")}
  
  validates_presence_of :first_name
  validates_presence_of :last_name
  validates_associated :user, :message => ""
  
  def email
    if user
      return user.email
    end
  end
  
  def full_name
    unless first_name.nil? && last_name.nil?
      first_name + " " + last_name
    else 
      nil
    end
  end
  
  def height_feet
    height / 12 unless height.nil?
  end

  def height_inches
    height - (height_feet * 12) unless height.nil?
  end
  
  def age
    unless dob.nil?
      now = Time.now.utc.to_date
      now.year - dob.year - ((now.month > dob.month || (now.month == dob.month && now.day >= dob.day)) ? 0 : 1)
    end
  end

end
