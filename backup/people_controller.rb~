class PeopleController < ApplicationController
  # CanCan
  load_and_authorize_resource
  
  # Devise
  before_filter :authenticate_user!
  

  # GET /people
  # GET /people.xml
  def index
    @people_search = Person.search(params[:people_search])
    # @people = @people_search
    @people = @people_search.relation.joins(:user => :roles).where(:roles => { :trigger => "talent" })
    @paginated_people = @people.clone.paginate(:per_page => 25, :page => params[:page])
    if params[:people_search]
      @url_params = params[:people_search].collect { |k, v| "people_search[#{k}]=#{v}" }.join("&")
      unless params[:people_search][:id_equals].empty?
        @person = Person.find(params[:people_search][:id_equals])
      end
    end
    
    authorize! :read, Person
    respond_to do |format|
        format.html # index.html.erb
        format.xml  { render :xml => @people }
        format.pdf { render :layout => false }
        format.js        
    end
  end
  
  def admintool
    @people_search = Person.search(params[:people_search])
    @people = @people_search
    @people_count_by_country_id = @people.count(:group => "country_id")
    @paginated_people = @people.clone.paginate(:per_page => 25, :page => params[:page])
    authorize! :read, @people
    respond_to do |format|
      format.html # admintool.html.erb
      format.xml  { render :xml => @people }
      format.js
    end
  end 

  # GET /people/1
  # GET /people/1.xml
  def show
    respond_to do |format|
      format.html
      format.xml  { render :xml => @person }
    end
  end

  # GET /people/new
  # GET /people/new.xml
  def new
    @person.user.build
    @user = @person.user
    respond_to do |format|
      format.html # new.html.erb
      format.xml  { render :xml => @person }
    end
  end

  # GET /people/1/edit
  def edit
  end

  # POST /people
  # POST /people.xml
  def create
    @user = User.new(params[:person][:user_attributes])
    @user.confirmed_at = Time.now

    @person = Person.new(params[:person])
    #@person.user = @user if @person.valid? && @user.valid?

    respond_to do |format|
      if @person.save && @user.save
        format.html { redirect_to(@person, :notice => 'Person was successfully created.') }
        format.xml  { render :xml => @person, :status => :created, :location => @person }
      else
        format.html { render :action => "new" }
        format.xml  { render :xml => @person.errors, :status => :unprocessable_entity }
      end
    end
  end

  # PUT /people/1
  # PUT /people/1.xml
  def update
    params[:person][:height] = params[:height_feet].to_i*12 + params[:height_inches].to_i 
    respond_to do |format|
      if @person.update_attributes(params[:person])
        format.html { redirect_to(@person, :notice => 'Person was successfully updated.') }
        format.xml  { head :ok }
      else
        format.html { render :action => "edit" }
        format.xml  { render :xml => @person.errors, :status => :unprocessable_entity }
      end
    end
  end

  # DELETE /people/1
  # DELETE /people/1.xml
  def destroy
    @person.destroy

    respond_to do |format|
      format.html { redirect_to(people_url) }
      format.xml  { head :ok }
    end
  end
  
  def print_skins_list
    @people_search = Person.search(params[:people_search])
    # @people = @people_search
    @people = @people_search.relation.joins(:user => :roles).where(:roles => { :trigger => "talent" })
    
    authorize! :read, Person
    
    respond_to do |format|
        format.pdf { render :layout => false }
    end
  end
  
  def print_basic_details
    respond_to do |format|
      format.pdf { render :layout => false }
    end
  end
  
  def print_hr_details
    respond_to do |format|
      format.pdf { render :layout => false }
    end
  end
  
  def print_basic_details_list
    @people_search = Person.search(params[:people_search])
    # @people = @people_search
    @people = @people_search.relation.joins(:user => :roles).where(:roles => { :trigger => "talent" })
    
    authorize! :read, Person
    
    respond_to do |format|
      format.pdf { render :layout => false }
    end
  end
  
  def print_hr_details_list
    @people_search = Person.search(params[:people_search])
    # @people = @people_search
    @people = @people_search.relation.joins(:user => :roles).where(:roles => { :trigger => "talent" })
    
    authorize! :read, Person
    
    respond_to do |format|
      format.pdf { render :layout => false }
    end
  end

end
